FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Performance Horizon API

# Group User

## User [/user]

A User can have permissions against multiple Publisher and Advertiser accounts.

+ Attributes (object)
    + user_id: 300621 - ID of the user
    + Include User Base
    + network_id: 1
    + network_name: PHG
    + `user_api_key`: ZMEt5ca8
    + Include Meta Info

### Retrieve User [GET]

Retrieve the details of the authenticated user.

+ Response 200 (application/json)
    + Attributes
        + user (User)

### Create an User [POST]

+ Request (application/json)
    + Attributes (User Base)
        + password: samplepass (required) - Password of the user

+ Response 200 (application/json)
    + Attributes
        + user (User)

### Update an User [POST /user/{user_id}]

+ Parameters
    + user_id: 300621 - ID of the user

# Group Network

## Network [/network]

+ Attributes (object)
    + network_id: 1 - ID of the network
    + network_name: PHG - Name of the network
    + network_description: PHG Network - Description of the network
    + network_notes: Internal PHG Network - Any additional notes for the network
    + `network_application_id`: 2
    + `auto_approve_publishers` (Yes Or No)
    + `default_campaign_id` - FIXME:null
    + `cm_client_id`: b4d0d85c2cff813cdce092c261b2b200
    + `network_contact_email` - FIXME:null
    + network_locale (Locale)

### List Networks [GET]

Retrieve the details of the authenticated network.

+ Response 200 (application/json)
    + Attributes
        + networks (array[Network Wrapper])

# Group Publisher

## Publishers [/user/publisher]

### List Publishers [GET]

List all the publishers of the network that can be accessed by the authenticated user

+ Response 200 (application/json)
    + Attributes
        + publishers (array[Publisher Wrapper])

### Create a Publisher [POST]

+ Request (application/json)
    + Attributes (Publisher Base)

+ Response 200 (application/json)
    + Attributes (Publisher Wrapper)

## Publisher [/user/publisher/{publisher_id}]

+ Parameters
    + publisher_id: 300254 - ID of the publisher

+ Attributes
    + publisher_id: 300254 - ID of the publisher
    + Include Publisher Base
    + description - Description of the publisher FIXME:null
    + company_name: Demo Publisher
    + company_division
    + operating_country (Country)
    + network_status (Status)
    + network_id: 1 - ID of the network this publisher belongs to
    + network_notes
    + created_by: 300621 - ID of the user who created this publisher
    + Include Time Info
    + Include Phone
    + contact_name: Pete Cheyne
    + contact_email: demo@performancehorizon.com
    + contact_locale (Locale)
    + im_provider: Skype
    + im_username: elisangis
    + campaign_select
    + `is_lead_user` (YesOrNo)
    + `is_affliate_user` (YesOrNo)
    + `is_foreign_network` (YesOrNo)
    + foreign_identifier
    + reporting_identifier
    + default_currency (Currency)
    + vat_number (number)
    + `uk_vat_registered`
    + gst_registered
    + `us_tax_state`
    + abn
    + Include Created
    + websites (array[Publisher Website])
    + databases (array[Publisher Database])

### Retreive Publisher [GET]

+ Response 200 (application/json)
    + Attributes (Publisher Wrapper)

### Update Publisher [POST]

# Group Publisher Website

Authenticated user must have access to the publisher account

## Publisher Websites [/user/publisher/{publisher_id}/website]

+ Parameters
    + publisher_id: 300254 - ID of the publisher

### List all Publisher Websites [GET]

List all the websites attached to the given publisher account

+ Response 200 (application/json)
    + Attributes
        + websites (array[Publisher Website Wrapper])

### Create Publisher Website [POST]

Create and add a new website for the given publisher account

+ Request (application/json)
    + Attributes (Publisher Website Base)

+ Response 200 (application/json)
    + Attributes
        + websites (array[Publisher Website Wrapper])

## Publisher Website [/user/publisher/{publisher_id}/website/{website_id}]

+ Parameters
    + publisher_id: 300254 - ID of the publisher
    + website_id: 300029 - ID of the publisher website

+ Attributes
    + website_id: 300029 - ID of the publisher website
    + publisher_id: 300254 - ID of the publisher the website belongs to
    + Include Publisher Website Base
    + active (YesOrNo)
    + created_by: 300621 - ID of the user who created this publisher website
    + Include Created

### Retrieve a Publisher Website [GET]

Retrieve the information about the specified publisher website

+ Response 200 (application/json)
    + Attributes (Publisher Website Wrapper)

### Update a Publisher Website [POST]

Update the specified publisher website

# Group Publisher Database

Authenticated user must have access to the publisher account

## Publisher Databases [/user/publisher/{publisher_id}/database]

+ Parameters
    + publisher_id: 300254 - ID of the publisher

### List all Publisher Databases [GET]

List all the databases attached to the given publisher account

+ Response 200 (application/json)
    + Attributes
        + databases (array[Publisher Database Wrapper])

### Create Publisher Database [POST]

Create and add a new database for the given publisher account

+ Request (application/json)
    + Attributes (Publisher Database Base)

+ Response 200 (application/json)
    + Attributes
        + databases (array[Publisher Database Wrapper])

## Publisher Database [/user/publisher/{publisher_id}/database/{database_id}]

+ Parameters
    + publisher_id: 300254 - ID of the publisher
    + database_id: 300002 - ID of the publisher database

+ Attributes
    + database_id: 300002 - ID of the publisher database
    + publisher_id: 300254 - ID of the publisher the database belongs to
    + Include Publisher Database Base
    + created_by: 300621 - ID of the user who created this publisher database
    + Include Created
    + male: 50 (number)
    + female: 50 (number)
    + min_age: 25 (number)
    + max_age: 77 (number)

### Retrieve a Publisher Database [GET]

Retrieve the information about the specified publisher database

+ Response 200 (application/json)
    + Attributes (Publisher Database Wrapper)

### Update a Publisher database [POST]

Update the specified publisher database

# Group Advertiser

## Advertisers [/user/advertiser]

### List all Advertisers [GET]

List all the advertisers that can be accessed by the authenticated user

+ Response 200 (application/json)
    + Attributes
        + advertisers (array[Advertiser Wrapper])

### Create Advertiser [POST]

Create and add a new database for the given publisher account

+ Request (application/json)
    + Attributes (Advertiser Base)

+ Response 200 (application/json)
    + Attributes (Advertiser Wrapper)

## Advertiser [/user/advertiser/{advertiser_id}]

+ Parameters
    + advertiser_id: 300309 - ID of the advertiser

+ Attributes (object)
    + advertiser_id: 300309 - ID of the advertiser
    + Include Advertiser Base
    + contact_email: kristin.bouveng@performancehorizon.com
    + status (Status)
    + pre_payment
    + current_balance
    + vat_number: 636136773 (number)
    + default_currency (Currency)
    + payment_currency (Currency)
    + `budget_summary_interval` (number)
    + `budget_summary_start_time` (number)
    + Include Created

### Retreive an Advertiser [GET]

+ Response 200 (application/json)
    + Attributes (Advertiser Wrapper)

### Update an Advertiser [POST]

# Group Campaign

A Campaign is owned by an Advertiser and an Advertiser may have multiple Camapigns. A Campaign represents an entity which the Advertiser uses to represent something that they wish to allow Publishers the chance to promote. A Campaign dictates what products/events/conversions can be promoted, and lets the Publishers understand what Commission they would earn for generating sales/events/conversions. The Advertiser has complete control over their Campaigns and dictates which Publishers they accept onto the Campaign to promote their services.

## Campaigns [/campaign]

### List all Campaigns [GET]

+ Response 200 (application/json)
    + Attributes
        + campaigns (array[Campaign Wrapper])

### Create a Campaign [POST]

+ Request (application/json)
    + Attributes (Campaign Base)

+ Response 200 (application/json)
    + Attributes (Campaign Wrapper)

## Campaign [/campaign/{campaign_id}]

+ Parameters
    + campaign_id: 300389 - ID of the campaign

+ Attributes
    + campaign_id: 300389 - ID of the campaign
    + Include Campaign Base
    + campaign_logo
    + created_by: 300621 - ID of the user who created the campaign
    + status (Status)
    + Include Time Info
    + hidden_campaign (YesOrNo)
    + conversion_type: sale
    + default_override: 0
    + vertical_id: 10
    + vertical_name: Other
    + payment_date
    + network_fee
    + hidden_campaign: n (YesOrNo)
    + default_currency (Currency)
    + tracking_method: s2s
    + `restricted_deep_linking`: n (YesOrNo)
    + `extra_restricted_deep_linking`
    + `allow_deep_linking` (YesOrNo)
    + `append_url_parameters`
    + cookie_period
    + cookie_status
    + `multiple_conversions_per_click`: n (YesOrNo)
    + `unique_conversion_refs` (YesOrNo)
    + description
    + `auto_rejected_ips`
    + `ip_tracking_time`: 0 (number)
    + associated_campaigns
    + `conversion_hiatus_period`: 7 (number)
    + `force_approve_period`: 0 (number)
    + `invoice_address_1`
    + `invoice_address_2`
    + `invoice_address_3`
    + `invoice_address_4`
    + `invoice_address_country` (Country)
    + `invoice_address_postcode`
    + `auto_approve_publisher` (YesOrNo)
    + `recurring_payment_setup` (YesOrNo)
    + `prepend_url_string`
    + test_mode: n (YesOrNo)
    + dont_invoice: n (YesOrNo)
    + dont_consolidate (YesOrNo)
    + `deferred_lead_submission`
    + invoice_contact
    + invoice_company
    + invoice_only
    + `pay_publisher_directly`: n (YesOrNo)
    + `allow_third_party_pixel`: n (YesOrNo)
    + `budget_summary_interval`
    + `budget_summary_start_time`
    + `lead_confirmation_url_success`
    + `lead_confirmation_url_fail`
    + tracking_subdomain
    + campaign_notes
    + campaign_languages
    + tq_enabled: n (YesOrNo)
    + `tq_enabled_publishers`
    + is_cpc (YesOrNo)
    + secure_tracking: n (YesOrNo)
    + `tq_auto_approve`: 60 (number)
    + Include Created
    + last_modified

### Retrieve a Campaign [GET]

+ Response 200 (application/json)
    + Attributes (Campaign Wrapper)

### Update a Campaign [POST]

# Data Structures

## User Base (object)
+ user_name: demomaster (required) - Username of the user
+ email_address: matthew.clarke@performancehorizon.com (required) - Email address registered to the user
+ firstname: Pete (required) - First name of the user
+ lastname: CheyneWins (required) - Surname of the user
+ Include Phone
+ fax: 123456 (number) - Fax number
+ Include Address
+ locale (Locale)
+ Include Signup IP

## Publisher Base (object)
+ account_name: publisherdemo (required)
+ vertical_name: Other
+ vertical: 10 (required)
+ `promotional_method_name`: Portal
+ promotional_method: 10 (required)
+ Include Signup IP

## Publisher Website Base (object)
+ website_url: http://www.performancehorizon.com (required)
+ website_type: 9 (required)
+ website_vertical: 10 (required)
+ description: Demo Publisher website - FIXME:null
+ website_country (Country)
+ website_name - FIXME:null

## Publisher Database Base (object)
+ database_name: PHG Test Database (required)
+ creation_method: Email (required)
+ size: 53000 (number, required)

## Advertiser Base (object)
+ account_name: demoadvertiser (required)
+ company_name: PHG Demo Advertiser (required)
+ Include Address
+ Include Phone
+ Include Signup IP

## Campaign Base (object)
+ advertiser_id: 300309 (required) - ID of the advertiser the campaign should belong to
+ title: PHG Aff Demo (required)
+ destination_url: http://www.performancehorizon.com (required)
+ One Of
    + default_commission_rate: 10 (number)
    + default_commission_value (number)

## Address (object)
+ address1: Gardegasse 11 (required) - 1st line of the address
+ address2: Top 7 - 2nd line of the address FIXME:null
+ address3: London - 3rd line of the address FIXME:null
+ address4 - 4th line of the address FIXME:null
+ country (Country) (required) - Country of the address
+ postcode: `A-101` (required) - Postcode/Zipcode attached to the address

## Phone (object)
+ phone: 01595725007 (required) - Primary contact telephone number
+ phone_area - FIXME:null

## Signup IP (object)
+ signup_ip: 178.23.129.160 (required)

## Created (object)
+ created: `2011-08-20 17:56:23` (required)

## Meta Info (object)
+ Include Signup IP
+ Include Created

## Time Info (object)
+ reporting_timezone (Timezone)
+ week_start: Monday

## Yes Or No (enum)
+ y - yes
+ n - no
+ Sample: y

## Status (enum)
+ a - Approved
+ p - Pending
+ r - Rejected
+ n
+ Sample: a

## Country (enum)
+ GB - Great Britain
+ JP - Japan
+ Sample: GB

## Locale (enum)
+ en - English
+ Sample: en

## Timezone (enum)
+ Australia/Sydney
+ Sample: Australia/Sydney

## Currency (enum)
+ GBP - Great Britain Pounds
+ Sample: GBP

## Network Wrapper (object)
+ network (Network)

## Advertiser Wrapper (object)
+ advertiser (Advertiser)

## Publisher Wrapper (object)
+ publisher (Publisher)

## Publisher Website Wrapper (object)
+ website (Publisher Website)

## Publisher Database Wrapper (object)
+ database (Publisher Database)

## Campaign Wrapper (object)
+ campaign (Campaign)
